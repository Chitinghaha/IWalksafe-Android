// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.objectdetection.OverlayView;
import org.tensorflow.lite.examples.objectdetection.R;

public final class FragmentCameraBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout cameraContainer;

  @NonNull
  public final Button cmDetect;

  @NonNull
  public final Button cmFind;

  @NonNull
  public final Button cmSetting;

  @NonNull
  public final OverlayView overlay;

  @NonNull
  public final PreviewView viewFinder;

  private FragmentCameraBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout cameraContainer, @NonNull Button cmDetect, @NonNull Button cmFind,
      @NonNull Button cmSetting, @NonNull OverlayView overlay, @NonNull PreviewView viewFinder) {
    this.rootView = rootView;
    this.cameraContainer = cameraContainer;
    this.cmDetect = cmDetect;
    this.cmFind = cmFind;
    this.cmSetting = cmSetting;
    this.overlay = overlay;
    this.viewFinder = viewFinder;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCameraBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCameraBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_camera, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCameraBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout cameraContainer = (ConstraintLayout) rootView;

      id = R.id.cm_detect;
      Button cmDetect = ViewBindings.findChildViewById(rootView, id);
      if (cmDetect == null) {
        break missingId;
      }

      id = R.id.cm_find;
      Button cmFind = ViewBindings.findChildViewById(rootView, id);
      if (cmFind == null) {
        break missingId;
      }

      id = R.id.cm_setting;
      Button cmSetting = ViewBindings.findChildViewById(rootView, id);
      if (cmSetting == null) {
        break missingId;
      }

      id = R.id.overlay;
      OverlayView overlay = ViewBindings.findChildViewById(rootView, id);
      if (overlay == null) {
        break missingId;
      }

      id = R.id.viewFinder;
      PreviewView viewFinder = ViewBindings.findChildViewById(rootView, id);
      if (viewFinder == null) {
        break missingId;
      }

      return new FragmentCameraBinding((ConstraintLayout) rootView, cameraContainer, cmDetect,
          cmFind, cmSetting, overlay, viewFinder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
