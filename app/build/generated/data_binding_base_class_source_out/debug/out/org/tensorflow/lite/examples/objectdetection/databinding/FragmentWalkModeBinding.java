// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.objectdetection.OverlayView;
import org.tensorflow.lite.examples.objectdetection.R;

public final class FragmentWalkModeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout cameraContainer;

  @NonNull
  public final OverlayView overlay;

  @NonNull
  public final PreviewView viewFinder;

  @NonNull
  public final Button wmCompass;

  @NonNull
  public final Button wmNavigation;

  @NonNull
  public final Button wmSetting;

  private FragmentWalkModeBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout cameraContainer, @NonNull OverlayView overlay,
      @NonNull PreviewView viewFinder, @NonNull Button wmCompass, @NonNull Button wmNavigation,
      @NonNull Button wmSetting) {
    this.rootView = rootView;
    this.cameraContainer = cameraContainer;
    this.overlay = overlay;
    this.viewFinder = viewFinder;
    this.wmCompass = wmCompass;
    this.wmNavigation = wmNavigation;
    this.wmSetting = wmSetting;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWalkModeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWalkModeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_walk_mode, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWalkModeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout cameraContainer = (ConstraintLayout) rootView;

      id = R.id.overlay;
      OverlayView overlay = ViewBindings.findChildViewById(rootView, id);
      if (overlay == null) {
        break missingId;
      }

      id = R.id.viewFinder;
      PreviewView viewFinder = ViewBindings.findChildViewById(rootView, id);
      if (viewFinder == null) {
        break missingId;
      }

      id = R.id.wm_compass;
      Button wmCompass = ViewBindings.findChildViewById(rootView, id);
      if (wmCompass == null) {
        break missingId;
      }

      id = R.id.wm_navigation;
      Button wmNavigation = ViewBindings.findChildViewById(rootView, id);
      if (wmNavigation == null) {
        break missingId;
      }

      id = R.id.wm_setting;
      Button wmSetting = ViewBindings.findChildViewById(rootView, id);
      if (wmSetting == null) {
        break missingId;
      }

      return new FragmentWalkModeBinding((ConstraintLayout) rootView, cameraContainer, overlay,
          viewFinder, wmCompass, wmNavigation, wmSetting);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
