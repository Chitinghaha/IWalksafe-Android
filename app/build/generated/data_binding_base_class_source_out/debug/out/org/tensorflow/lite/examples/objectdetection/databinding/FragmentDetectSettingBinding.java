// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.objectdetection.R;

public final class FragmentDetectSettingBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btn;

  @NonNull
  public final Button buttonSound;

  @NonNull
  public final EditText lltext;

  @NonNull
  public final RecyclerView rView;

  private FragmentDetectSettingBinding(@NonNull FrameLayout rootView, @NonNull Button btn,
      @NonNull Button buttonSound, @NonNull EditText lltext, @NonNull RecyclerView rView) {
    this.rootView = rootView;
    this.btn = btn;
    this.buttonSound = buttonSound;
    this.lltext = lltext;
    this.rView = rView;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetectSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetectSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_detect_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetectSettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn;
      Button btn = ViewBindings.findChildViewById(rootView, id);
      if (btn == null) {
        break missingId;
      }

      id = R.id.buttonSound;
      Button buttonSound = ViewBindings.findChildViewById(rootView, id);
      if (buttonSound == null) {
        break missingId;
      }

      id = R.id.lltext;
      EditText lltext = ViewBindings.findChildViewById(rootView, id);
      if (lltext == null) {
        break missingId;
      }

      id = R.id.r_view;
      RecyclerView rView = ViewBindings.findChildViewById(rootView, id);
      if (rView == null) {
        break missingId;
      }

      return new FragmentDetectSettingBinding((FrameLayout) rootView, btn, buttonSound, lltext,
          rView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
